###############################################################################
#
# Golem Tools/Phys library
#
###############################################################################

option(GOLEM_BUILD_TOOLS_PHYS "Build Golem Tools Phys libraries" NO)
mark_as_advanced(GOLEM_BUILD_TOOLS_PHYS)

if(GOLEM_BUILD_TOOLS_PHYS)
	SET(PACKAGE_DIR "${PACKAGE_TOOLS}/Phys")

	# PhysX
	SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${GOLEM_PROJECT_CMAKE_MODULES}")
	find_package(PhysX REQUIRED)

	FILE(GLOB_RECURSE PACKAGE_SOURCES "${PACKAGE_DIR}/src/*.cpp")
	FILE(GLOB_RECURSE PACKAGE_HEADERS "${PACKAGE_DIR}/include/*.h")

	if(GOLEM_DYNAMIC_LIBS)
		ADD_LIBRARY(GolemPhys SHARED ${PACKAGE_SOURCES} ${PACKAGE_HEADERS})
		TARGET_COMPILE_OPTIONS(GolemPhys PUBLIC ${CMAKE_DLL_EXPORT_FLAGS})
	else(GOLEM_DYNAMIC_LIBS)
		ADD_LIBRARY(GolemPhys STATIC ${PACKAGE_SOURCES} ${PACKAGE_HEADERS})
	endif(GOLEM_DYNAMIC_LIBS)

	TARGET_LINK_LIBRARIES(GolemPhys GolemSim ${PHYSX_LIBRARIES})
	
	TARGET_INCLUDE_DIRECTORIES(GolemPhys PUBLIC ${PACKAGE_DIR}/include PUBLIC ${PHYSX_INCLUDE_DIR})
			
	if (CPACK_BUILD_PHYS)
		if(GOLEM_DYNAMIC_LIBS)
			if (WIN32)
				INSTALL(TARGETS GolemPhys RUNTIME DESTINATION bin COMPONENT phys_libs)
			elseif (UNIX)
				INSTALL(TARGETS GolemPhys LIBRARY DESTINATION bin COMPONENT phys_libs)
			endif()
		else(GOLEM_DYNAMIC_LIBS)
			INSTALL(TARGETS GolemPhys ARCHIVE DESTINATION lib COMPONENT phys_libs)
		endif(GOLEM_DYNAMIC_LIBS)
		INSTALL(FILES ${PACKAGE_HEADERS} DESTINATION include/Golem/Phys/ COMPONENT phys_headers)
	endif (CPACK_BUILD_PHYS)
	
	SET_PROPERTY(TARGET GolemPhys PROPERTY PROJECT_LABEL "Phys")
	SET_PROPERTY(TARGET GolemPhys PROPERTY FOLDER "Tools")
	SOURCE_GROUP("Include Files" FILES ${PACKAGE_HEADERS})
endif(GOLEM_BUILD_TOOLS_PHYS)
