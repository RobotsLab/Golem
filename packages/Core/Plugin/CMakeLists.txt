###############################################################################
#
# Golem Core/Plugin library
#
###############################################################################

if(GOLEM_BUILD_CORE)
	SET(PACKAGE_DIR "${PACKAGE_CORE}/Plugin")

	find_package(OpenGL REQUIRED)
	find_package(GLUT REQUIRED)
	
	# Boost
	if (WIN32)
		ADD_DEFINITIONS(-DBOOST_ALL_NO_LIB)
		SET(Boost_USE_STATIC_LIBS ON)
		SET(Boost_ALL_DYN_LINK OFF)
	elseif (UNIX)
		#ADD_DEFINITIONS(-DBOOST_ALL_NO_LIB)
		#SET(Boost_USE_STATIC_LIBS OFF)
		#SET(Boost_ALL_DYN_LINK ON)
	endif ()
	FIND_PACKAGE(Boost COMPONENTS filesystem)

	FILE(GLOB_RECURSE PACKAGE_SOURCES "${PACKAGE_DIR}/src/*.cpp")
	FILE(GLOB_RECURSE PACKAGE_HEADERS "${PACKAGE_DIR}/include/*.h")

	if(GOLEM_DYNAMIC_LIBS)
		ADD_LIBRARY(GolemPlugin SHARED ${PACKAGE_SOURCES} ${PACKAGE_HEADERS})		
		TARGET_COMPILE_OPTIONS(GolemPlugin PUBLIC ${CMAKE_DLL_EXPORT_FLAGS})
	else(GOLEM_DYNAMIC_LIBS)
		ADD_LIBRARY(GolemPlugin STATIC ${PACKAGE_SOURCES} ${PACKAGE_HEADERS})
	endif(GOLEM_DYNAMIC_LIBS)

	TARGET_LINK_LIBRARIES(GolemPlugin GolemPlanner ${OPENGL_LIBRARIES} ${GLUT_LIBRARIES} ${Boost_LIBRARIES})

	TARGET_INCLUDE_DIRECTORIES(GolemPlugin PUBLIC ${PACKAGE_DIR}/include ${OPENGL_INCLUDE_DIR} ${GLUT_INCLUDE_DIR} ${Boost_INCLUDE_DIRS})
		
	if (CPACK_BUILD_CORE)
		if(GOLEM_DYNAMIC_LIBS)
			if (WIN32)
				INSTALL(TARGETS GolemPlugin RUNTIME DESTINATION bin COMPONENT core_libs)
			elseif (UNIX)
				INSTALL(TARGETS GolemPlugin LIBRARY DESTINATION bin COMPONENT core_libs)
			endif()
		else(GOLEM_DYNAMIC_LIBS)
			INSTALL(TARGETS GolemPlugin ARCHIVE DESTINATION lib COMPONENT core_libs)
		endif(GOLEM_DYNAMIC_LIBS)
		INSTALL(FILES ${PACKAGE_HEADERS} DESTINATION include/Golem/Plugin/ COMPONENT core_headers)
	endif (CPACK_BUILD_CORE)
	
	SET_PROPERTY(TARGET GolemPlugin PROPERTY PROJECT_LABEL "Plugin")
	SET_PROPERTY(TARGET GolemPlugin PROPERTY FOLDER "Core")
	SOURCE_GROUP("Include Files" FILES ${PACKAGE_HEADERS})
endif(GOLEM_BUILD_CORE)
