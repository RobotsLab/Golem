###############################################################################
#
# Golem Core/Tools library
#
###############################################################################

if(GOLEM_BUILD_CORE)
	SET(PACKAGE_DIR "${PACKAGE_CORE}/Tools")

	# OpenCV
	FIND_PACKAGE(OpenCV REQUIRED)
	# PCL
	FIND_PACKAGE(PCL REQUIRED)
	list(REMOVE_ITEM PCL_LIBRARIES "vtkproj4") # PCL bug

	FILE(GLOB_RECURSE PACKAGE_SOURCES "${PACKAGE_DIR}/src/*.cpp")
	FILE(GLOB_RECURSE PACKAGE_HEADERS "${PACKAGE_DIR}/include/*.h")

	if(GOLEM_DYNAMIC_LIBS)
		ADD_LIBRARY(GolemTools SHARED ${PACKAGE_SOURCES} ${PACKAGE_HEADERS})		
		TARGET_COMPILE_OPTIONS(GolemTools PUBLIC ${CMAKE_DLL_EXPORT_FLAGS})
	else(GOLEM_DYNAMIC_LIBS)
		ADD_LIBRARY(GolemTools STATIC ${PACKAGE_SOURCES} ${PACKAGE_HEADERS})
	endif(GOLEM_DYNAMIC_LIBS)

	# Windows 32/64 bit
	if (WIN32)
		TARGET_LINK_LIBRARIES(GolemTools GolemPlugin ${OpenCV_LIBS} ${PCL_LIBRARIES})
	# Unix Linux/Apple
	elseif (UNIX)
		TARGET_LINK_LIBRARIES(GolemTools GolemPlugin ${OpenCV_LIBS} ${PCL_LIBRARIES})
	endif ()

	TARGET_COMPILE_DEFINITIONS(GolemTools PUBLIC ${OPENCV_DEFINITIONS} PUBLIC ${PCL_DEFINITIONS})
	TARGET_INCLUDE_DIRECTORIES(GolemTools PUBLIC ${PACKAGE_DIR}/include PUBLIC ${OPENCV_INCLUDE_DIRS} PUBLIC ${PCL_INCLUDE_DIRS})
		
	if (CPACK_BUILD_CORE)
		if(GOLEM_DYNAMIC_LIBS)
			if (WIN32)
				INSTALL(TARGETS GolemTools RUNTIME DESTINATION bin COMPONENT core_libs)
			elseif (UNIX)
				INSTALL(TARGETS GolemTools LIBRARY DESTINATION bin COMPONENT core_libs)
			endif()
		else(GOLEM_DYNAMIC_LIBS)
			INSTALL(TARGETS GolemTools ARCHIVE DESTINATION lib COMPONENT core_libs)
		endif(GOLEM_DYNAMIC_LIBS)
		INSTALL(FILES ${PACKAGE_HEADERS} DESTINATION include/Golem/Tools/ COMPONENT core_headers)
	endif (CPACK_BUILD_CORE)
	
	SET_PROPERTY(TARGET GolemTools PROPERTY PROJECT_LABEL "Tools")
	SET_PROPERTY(TARGET GolemTools PROPERTY FOLDER "Core")
	SOURCE_GROUP("Include Files" FILES ${PACKAGE_HEADERS})
endif(GOLEM_BUILD_CORE)
