# - Find FLYCAPTURE2
# Find the native FLYCAPTURE2 headers and libraries.
#
#  FLYCAPTURE2_INCLUDE_DIR -  where to find the include files of FLYCAPTURE2
#  FLYCAPTURE2_LIBRARIES    - List of libraries when using FLYCAPTURE2.
#  FLYCAPTURE2_FOUND        - True if FLYCAPTURE2 found.

GET_FILENAME_COMPONENT(module_file_path ${CMAKE_CURRENT_LIST_FILE} PATH)

if(CMAKE_SIZEOF_VOID_P EQUAL 8)
	SET(LIB "lib64")
else(CMAKE_SIZEOF_VOID_P EQUAL 8)
	SET(LIB "lib")
endif(CMAKE_SIZEOF_VOID_P EQUAL 8)

SET(program_files_path "$ENV{PROGRAMFILES}")

IF(program_files_path)
	FILE(TO_CMAKE_PATH $ENV{PROGRAMFILES} program_files_path)
ENDIF(program_files_path)

SET(FLYCAPTURE2_PATHS
	/usr/
	/usr/local/
	"${program_files_path}/Point Grey Research/FlyCapture2/"
	"C:/Program Files (x86)/Point Grey Research/FlyCapture2/"
	"C:/Program Files/Point Grey Research/FlyCapture2/"
)

# Look for the header file.
FIND_PATH(FLYCAPTURE2_INCLUDE NAMES FlyCapture2.h PATHS ${FLYCAPTURE2_PATHS} PATH_SUFFIXES "include/flycapture" "include")
MARK_AS_ADVANCED(FLYCAPTURE2_INCLUDE)

# Look for the library file.
FIND_LIBRARY(FLYCAPTURE2_LIBRARY NAMES flycapture FlyCapture2 PATHS ${FLYCAPTURE2_PATHS} PATH_SUFFIXES "${LIB}" "lib")
MARK_AS_ADVANCED(FLYCAPTURE2_LIBRARY)

# Copy the results to the output variables.
IF(FLYCAPTURE2_INCLUDE AND FLYCAPTURE2_LIBRARY)
	SET(FLYCAPTURE2_FOUND 1)
	SET(FLYCAPTURE2_LIBRARIES ${FLYCAPTURE2_LIBRARY})
	SET(FLYCAPTURE2_INCLUDE_DIR ${FLYCAPTURE2_INCLUDE})
ELSE(FLYCAPTURE2_INCLUDE AND FLYCAPTURE2_LIBRARY)
	SET(FLYCAPTURE2_FOUND 0)
	SET(FLYCAPTURE2_LIBRARIES)
	SET(FLYCAPTURE2_INCLUDE_DIR)
ENDIF(FLYCAPTURE2_INCLUDE AND FLYCAPTURE2_LIBRARY)

# Report the results.
IF(NOT FLYCAPTURE2_FOUND)
	SET(FLYCAPTURE2_DIR_MESSAGE "FLYCAPTURE2 was not found. Make sure FLYCAPTURE2_LIBRARIES and FLYCAPTURE2_INCLUDE_DIR are set.")
	IF(FLYCAPTURE2_FIND_REQUIRED)
		MESSAGE(FATAL_ERROR "${FLYCAPTURE2_DIR_MESSAGE}")
	ELSEIF(NOT FLYCAPTURE2_FIND_QUIETLY)
		MESSAGE(STATUS "${FLYCAPTURE2_DIR_MESSAGE}")
	ENDIF(FLYCAPTURE2_FIND_REQUIRED)
ENDIF(NOT FLYCAPTURE2_FOUND)
