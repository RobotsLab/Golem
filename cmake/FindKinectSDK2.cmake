# - Find KINECTSDK2
# Find the native KINECTSDK2 headers and libraries.
#
#  KINECTSDK2_INCLUDE_DIR -  where to find the include files of KINECTSDK2
#  KINECTSDK2_LIBRARIES    - List of libraries when using KINECTSDK2.
#  KINECTSDK2_FOUND        - True if KINECTSDK2 found.

GET_FILENAME_COMPONENT(module_file_path ${CMAKE_CURRENT_LIST_FILE} PATH)

if(CMAKE_SIZEOF_VOID_P EQUAL 8)
	SET(LIB "x64")
else(CMAKE_SIZEOF_VOID_P EQUAL 8)
	SET(LIB "x86")
endif(CMAKE_SIZEOF_VOID_P EQUAL 8)

SET(program_files_path "$ENV{PROGRAMFILES}")

IF(program_files_path)
	FILE(TO_CMAKE_PATH $ENV{PROGRAMFILES} program_files_path)
ENDIF(program_files_path)

SET(KINECTSDK2_PATHS
	"${program_files_path}/Microsoft SDKs/Kinect/v2.0_1409/"
	"C:/Program Files (x86)/Microsoft SDKs/Kinect/v2.0_1409/"
	"C:/Program Files/Microsoft SDKs/Kinect/v2.0_1409/"
)

# Look for the header file.
FIND_PATH(KINECTSDK2_INCLUDE NAMES Kinect.h PATHS ${KINECTSDK2_PATHS} PATH_SUFFIXES "inc")
MARK_AS_ADVANCED(KINECTSDK2_INCLUDE)

# Look for the library file.
FIND_LIBRARY(KINECTSDK2_LIBRARY NAMES Kinect20 PATHS ${KINECTSDK2_PATHS} PATH_SUFFIXES "Lib/${LIB}")
MARK_AS_ADVANCED(KINECTSDK2_LIBRARY)

# Copy the results to the output variables.
IF(KINECTSDK2_INCLUDE AND KINECTSDK2_LIBRARY)
	SET(KINECTSDK2_FOUND 1)
	SET(KINECTSDK2_LIBRARIES ${KINECTSDK2_LIBRARY})
	SET(KINECTSDK2_INCLUDE_DIR ${KINECTSDK2_INCLUDE})
ELSE(KINECTSDK2_INCLUDE AND KINECTSDK2_LIBRARY)
	SET(KINECTSDK2_FOUND 0)
	SET(KINECTSDK2_LIBRARIES)
	SET(KINECTSDK2_INCLUDE_DIR)
ENDIF(KINECTSDK2_INCLUDE AND KINECTSDK2_LIBRARY)

# Report the results.
IF(NOT KINECTSDK2_FOUND)
	SET(KINECTSDK2_DIR_MESSAGE "KINECTSDK2 was not found. Make sure KINECTSDK2_LIBRARIES and KINECTSDK2_INCLUDE_DIR are set.")
	IF(KINECTSDK2_FIND_REQUIRED)
		MESSAGE(FATAL_ERROR "${KINECTSDK2_DIR_MESSAGE}")
	ELSEIF(NOT KINECTSDK2_FIND_QUIETLY)
		MESSAGE(STATUS "${KINECTSDK2_DIR_MESSAGE}")
	ENDIF(KINECTSDK2_FIND_REQUIRED)
ENDIF(NOT KINECTSDK2_FOUND)
